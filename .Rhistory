con = url('https://www.jhsph.edu',r)
con = url('https://www.jhsph.edu', 'r')
x = readLines(con)
x
head(x)
add1 <- function(x,y){
x+y
}
add1 <- function(x,y){
x+y
}
add1(3,6)
above10 = function(x){
data1 = x>10
}
10
above10(123)
above10()
above10(1)
above10 = function(x){
data1 = x>10
x[data1]
}
above10(1)
above10(23)
aboven = function(x,n){
data1 = x > n
x[data1]
}
aboven(10,12)
aboven(x,12)
aboven(1,12)
above10 = function(x){
data1 = x>10
x[data1]
}
aboven = function(x1,n){
data2 = x1 > n
x1[data1]
}
aboven(1,12)
aboven(x,12)
aboven = function(x1,n){
data2 = x1 > n
x1[data2]
}
aboven(x,12)
aboven(1,12)
aboven(12,x)
aboven <- function(x1,n){
data2 <- x1 > n
x1[data2]
}
x <- 5:15
aboven(x,14)
colmean = function(y){
nc <- ncol(y)
means = numeric(nc)
for(i in 1:nc){
means[i] <- mean(y,i)
}
}
colmean((airquality)
ws,
colmean(airquality)
colmean = function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
}
colmean(airquality)
colmean = function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
colmean(airquality)
swirl()
library(swirl)
swirl()
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10, by = 0.5)
seq(5,30, length = 30)
seq(5,10, length = 30)
my_seq <- seq(5,10, length = 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times =40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
num_vect <- c(0,5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
tf = num_vect < 1
tf <- num_vect < 1
tf
nv <- num_vect>=6
nv <- num_vect >= 6
num_vect >= 6 -> nv
num_vect >= 6
my_char <- c('my','name','is')
my_char <- c("my","name","is")
my_char <- c("My","name","is")
my_char
paste(my_char, collapse = "")
paste(my_char, collapse = " ")
my_name <- c(my_char, "Uday")
my_name
paste(c , collapse = " ")
paste(my_name , collapse = " ")
paste("Hello","World", sep = " ")
paste("Hello","world!", sep = " ")
paste( c(1:3), c("X","Y","Z"), sep ="")
paste(LETTERS, 1:4, sep = "-")
2
swirl()
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(mu)
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0 ]
x[x+1]
x[x>!]
x>1
c(3,5,7)
[c(3,5,7)]
x[c(3,5,7)]
x[0]
x[3000]
x[x(-2,-10)]
x[c(-2,-10)]
x[-c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar =2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect1, vect2)
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
?dim()
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
>matrix()
?matrix()
?`matrix-class`
?matrix
my_matrix2 <- matrix(1:20, nrow =4, ncol =5)
identical(my_matrix, mmy_matrix1)
identical(my_matrix, mmy_matrix2)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weigt","bp","rating","test")
cnames <- c("patient","age","weight","bp","rating","test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
gl(1,2)
gl(2,5)
gl(5,10)
gl(10,2)
dataset(iris)
library(datasets)
dataset(iris)
data(iris)
data
data
data <- data(iris)
data
data
?iris
vir <- iris[iris$Species == 'virginica']
vir <- iris[iris$Species = 'virginica']
View(iris)
View(iris)
vir <- iris[iris$Species = "virginica"]
vir <- iris[iris$Species =="virginica"]
vir <- iris$Species =="virginica"
vir
library(datasets)
data <- data(iris)
?iris
vir <- iris$Species ="virginica"
vir
library(data.table)
iris_dt <- as.data.table(iris)
iris_dt[Species == "virginica",round(mean(Sepal.Length)) ]
library(data.table)
iris_dt <- as.data.table(iris)
library(datasets)
data <- data(iris)
virginica<-subset(iris,Species == 'virginica')
mean(virginica$Sepal.Length)
TRUE || FALSE
7>=8||50<=49.5
FALSE && TRUE
FALSE && 6 >= 6
6 >= 6
7>=9
7 == 7.0
fileUrl <- "https://data.gov.in/catalog/performance-key-hmis-indicators-upto-district-level-other-indicators"
download.file(fileUrl, destfile = "./data/cameras.csv", method = "curl")
library(XML)
fileurl = "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileurl, useInternal = TRUE)
library(XML)
fileUrl = "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
rownames=FALSE, header=TRUE, na="", sheet="CPU", stringsAsFactors=TRUE
CPU <-
readXL("C:/Users/udat/Desktop/Planning and Data/Copy of SL547_stabilitydata.xlsx",
rownames=FALSE, header=TRUE, na="", sheet="CPU", stringsAsFactors=TRUE)
install.packages("readxl")
CPU <-
readXL("C:/Users/udat/Desktop/Planning and Data/Copy of SL547_stabilitydata.xlsx",
rownames=FALSE, header=TRUE, na="", sheet="CPU", stringsAsFactors=TRUE)
library(readxl)
CPU <-
readXL("C:/Users/udat/Desktop/Planning and Data/Copy of SL547_stabilitydata.xlsx",
rownames=FALSE, header=TRUE, na="", sheet="CPU", stringsAsFactors=TRUE)
CPU <-
readxl("C:/Users/udat/Desktop/Planning and Data/Copy of SL547_stabilitydata.xlsx",
rownames=FALSE, header=TRUE, na="", sheet="CPU", stringsAsFactors=TRUE)
CPU <-
readxl("C:/Users/udat/Desktop/Planning and Data/Copy of SL547_stabilitydata.xlsx",
rownames=FALSE, header=TRUE, na="", sheet="CPU", stringsAsFactors=TRUE)
CPU <- read.csv("C:/Users/udat/Desktop/Planning and Data/Copy of SL547_stabilitydata.xlsx",
rownames=FALSE, header=TRUE, na="", sheet="CPU", stringsAsFactors=TRUE)
CPU <- read.table("C:/Users/udat/Desktop/Planning and Data/Copy of SL547_stabilitydata.xlsx",
rownames=FALSE, header=TRUE, na="", sheet="CPU", stringsAsFactors=TRUE)
CPU <- read.csv("C:/Users/udat/Desktop/Planning and Data/CPU.csv")
CPU
head(CPU)
install.packages("dplyr")
install.packages("lubridate")
install.packages("ggplot2")
install.packages("forecast")
library(dplyr)
library(lubridate)
library(ggplot2)
library(forecast)
head(CPU)
CPU$DATE...TIME <- strptime(CPU$DATE...TIME, '%d-%m-%Y')
CPU$DATE...TIME <- as.POSIXct(CPU$DATE...TIME)
str(CPU)
CPU <- mutate(CPU, MonthYear = paste(year(Date),formatC(month(Date), width = 2, flag = "0")))
CPU <- read.csv("C:/Users/udat/Desktop/Planning and Data/CPU.csv")
library(dplyr)
library(lubridate)
library(ggplot2)
library(forecast)
head(CPU)
CPU$DATE...TIME <- strptime(CPU$DT, '%d-%m-%Y')
CPU$DATE...TIME <- as.POSIXct(CPU$DT)
str(CPU)
CPU <- mutate(CPU, MonthYear = paste(year(DT),formatC(month(Date), width = 2, flag = "0")))
CPU <- mutate(CPU, MonthYear = paste(year(DT),formatC(month(DT), width = 2, flag = "0")))
CPU
library(dplyr)
library(lubridate)
library(ggplot2)
library(forecast)
CPU <- read.csv("C:/Users/udat/Desktop/Planning and Data/CPU.csv")
head(CPU)
CPU$DATE...TIME <- strptime(CPU$DT, '%d-%m-%Y')
CPU$DATE...TIME <- as.POSIXct(CPU$DT)
str(CPU)
library(dplyr)
library(lubridate)
library(ggplot2)
library(forecast)
CPU <- read.csv("C:/Users/udat/Desktop/Planning and Data/CPU.csv")
head(CPU)
CPU$DATE...TIME <- strptime(CPU$DT, '%d-%m-%Y')
CPU$DATE...TIME <- as.POSIXct(CPU$DT)
str(CPU)
head(CPU)
library(dplyr)
library(lubridate)
library(ggplot2)
library(forecast)
CPU <- read.csv("C:/Users/udat/Desktop/Planning and Data/CPU.csv")
head(CPU)
CPU$DATE...TIME <- strptime(CPU$DT, '%Y-%m-%d')
CPU$DATE...TIME <- as.POSIXct(CPU$DT)
str(CPU)
CPU
library(dplyr)
library(lubridate)
library(ggplot2)
library(forecast)
CPU <- read.csv("C:/Users/udat/Desktop/Planning and Data/CPU.csv")
head(CPU)
CPU$DT <- as.POSIXct(CPU$DT)
CPU
CPU$DT <- strptime(CPU$DT, '%Y-%m-%d')
CPU$DT <- as.POSIXct(CPU$DT)
CPU
library(dplyr)
library(lubridate)
library(ggplot2)
library(forecast)
CPU <- read.csv("C:/Users/udat/Desktop/Planning and Data/CPU.csv")
head(CPU)
CPU$DT <- strptime(CPU$DT, '%D-%M-%Y')
CPU
CPU$DT <- as.POSIXct(CPU$DT)
CPU
library(dplyr)
library(lubridate)
library(ggplot2)
library(forecast)
CPU <- read.csv("C:/Users/udat/Desktop/Planning and Data/CPU.csv")
head(CPU)
CPU$DT <- strptime(CPU$DT, '%D-%m-%Y')
CPU
library(dplyr)
library(lubridate)
library(ggplot2)
library(forecast)
CPU <- read.csv("C:/Users/udat/Desktop/Planning and Data/CPU.csv")
head(CPU)
CPU$DT <- strptime(CPU$DT, '%d-%m-%y')
CPU$DT <- as.POSIXct(CPU$DT)
CPU
library(dplyr)
library(lubridate)
library(ggplot2)
library(forecast)
CPU <- read.csv("C:/Users/udat/Desktop/Planning and Data/CPU.csv")
head(CPU)
CPU$DT <- strptime(CPU$DT, '%d-%m-%Y')
CPU$DT <- as.POSIXct(CPU$DT)
CPU
str(CPU)
CPU <- mutate(CPU, MonthYear = paste(year(DT),formatC(month(DT), width = 2, flag = "0")))
CPU
CPU <- mutate(CPU, MonthYear = paste(month(DT),formatC(year(DT), width = 2, flag = "0")))
CPU
library(swirl)
swirl()
libra
library(swirl)
install_from_swirl("Getting and Cleaning Data")
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileurl, destfile = './data1.csv')
data <- read.csv('data1.csv')
data
View(data)
View(data)
View(data)
View(data)
View(data)
View(data)
data[data$VAL == 24]
data[data$VAL == 24, .N]
data$VAL == 24
data <- count(data$VAL == 24)
data <- data$VAL = 24
data$VAL
data$VAL = 24
n = data$VAL = 24
n
data <- read.csv('data1.csv')
data
data[VAL == 24, .N]
View(data)
x = data$VAL
x[names(x)== 24]
data[names(data$VAL)== 24]
data(length(which(data$VAL == 24)))
data$VAL(length(which(numbers == 24)))
numbers <- data$VAL
x <- 24
length(subset(numbers, numbers==x))
length(which(24 == numbers))
fileurl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileurl2, destfile = './data1.csv')
download.file(fileurl2, destfile = './data2.csv')
getwd()
data2[18:23,7:15]
data2 <- read.csv('data')
data2 <- read.csv('data2.csv')
data2 <- read.table('data2.csv')
fileurl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileurl2, destfile = './data2.xlsx')
data2 <- read.table('data2.csv')
fileurl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileurl2, destfile = './data2.xlsx')
data2 <- read.table('data2.xlsx')
fileurl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
data2 <- read.table('data2.xlsx')
library(readxl)
data2 <- read_excel('data2.xlsx')
data2
dat <- data2[18:23, 7:15]
dat
sum(dat$Zip*dat$Ext,na.rm=T)
data2 <- read_excel('data2.xlsx',sheetIndex = 1, rowIndex = 18:23, colIndex = 7:15)
data2 <- read_xlsx('data2.xlsx',sheetIndex = 1, rowIndex = 18:23, colIndex = 7:15)
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl, destfile = paste0(getwd(), '/getdata%2Fdata%2FDATA.gov_NGAP.xlsx'), method = "curl")
dat <- xlsx::read.xlsx(file = "getdata%2Fdata%2FDATA.gov_NGAP.xlsx", sheetIndex = 1, rowIndex = 18:23, colIndex = 7:15)
sum(dat$Zip*dat$Ext,na.rm=T)
library(xlsx)
install.packages("xlsx")
library(xlsx)
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl, destfile = paste0(getwd(), '/getdata%2Fdata%2FDATA.gov_NGAP.xlsx'), method = "curl")
dat <- xlsx::read.xlsx(file = "getdata%2Fdata%2FDATA.gov_NGAP.xlsx", sheetIndex = 1, rowIndex = 18:23, colIndex = 7:15)
sum(dat$Zip*dat$Ext,na.rm=T)
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileurl, destfile = './data1.csv')
data <- read.csv('data1.csv')
numbers <- data$VAL
x <- 24
length(subset(numbers, numbers==x))
length(which(24 == numbers))
library(readxl)
data2 <- read_xlsx('data2.xlsx',sheetIndex = 1, rowIndex = 18:23, colIndex = 7:15)
data2
library(xlsx)
library(xlsx)
library(xlsx)
library(readxl)
data2 <- read_excel('data2.xlsx',sheetIndex = 1, rowIndex = 18:23, colIndex = 7:15)
data2 <- read_excel('data2.xlsx' rowIndex = 18:23, colIndex = 7:15)
data2 <- read_excel('data2.xlsx', rowIndex = 18:23, colIndex = 7:15)
?read_excel
data2 <- read_excel('data2.xlsx', cell_rows(18:23), cell_cols(7:15))
data2 <- read_excel('data2.xlsx', cell_rows(18:23), cell_cols(7:15), sheet = 1)
data2 <- read_excel('data2.xlsx', cell_rows(18:23), cell_cols(7:15), sheet = 1, col_names = FALSE)
read_excel(data2, range = cell_rows(18:23), cell_cols(7:15), col_names = FALSE)
data2 <- read_excel('data2.xlsx')
read_excel(data2, range = cell_rows(18:23), cell_cols(7:15), col_names = FALSE)
data2
setwd("C:/Users/udat/Desktop/Rdata")
setwd("C:/Users/udat/Desktop/Rdata")
setwd("C:/Users/udat/Desktop/Rdata")
